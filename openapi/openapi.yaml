openapi: 3.1.0
info:
  version: 1.0.0
  title: Data Transfer Exchange UC1 
  contact:
    name: Contact our support
    email: haya.halimeh@uni-paderborn.de
  
    
  license:
    name: The MIT License (MIT)
    url: 'https://opensource.org/licenses/MIT'
    
  
  x-logo:
      url: 'https://raw.githubusercontent.com/HayaHalimeh/DRK-UC1-Datenaustauschformat/main/openapi/logo.png'
      backgroundColor: '#FFFFFF'

  description: 
    "This is an online documentation of the Data Transfer Exchange Format of the DRK-UC1 project.
    \n\n
    The Data Transfer Exchange Format for UC1 is an artifact that aims to provide a structured format for data transfer between different cultural platforms.
    \n\n

    The schemas of the entities of the Data Transfer Exchange Format build on and extend [Schema.org] (https://schema.org/), a collaborative, community activity with a mission to create, maintain, and promote schemas for structured data on the Internet, on web pages, in email messages, and beyond.
    New entities or attributes that do not exist in Schema.org are marked as such (i.e. extended entity or extended attribute). Please refer to Schema.org for more details about the entities and/or attributes.    \n\n
    For a detailed visual representation of of the Data Transfer Exchange Format , see our [Data Model Diagram](#operation/getDiagram).
    \n\n
    Please Note: The Data Transfer Exchange Format can be served in its minimum viable format, i.e. Fields that are required are marked as such, all other fields are optional.

    Media objects are digital objects that can be exchanged between different platforms and have own licenses and privacy concerns.
    To send all kinds of media objects with other entites (e.g. events, etc.), see the [MediaObjectAssociations](#operation/getMediaObjectAssociations) section.
    "

security:
  - apiKeyAuth: []   

x-tagGroups:
  - name: Diagram
    description: The Data Model schema provides a structured format for data transfer. Below is the ERD diagram illustrating the relationships.
    tags:
      - Diagram
    
  - name: General
    description: General entities that are part of the data exchange format
    tags:
      - Account
      - CreativeWork
      - Event
      - Location
      - TouristAttraction
      - Organization
      - Person
      - VendorProfile
          
  - name: MediaObjects
    description: "Media objects are digital objects that can be exchanged between different platforms and have own licenses and agreements"
    info: "Media objects are digital objects that can be exchanged between different platforms and have own licenses and agreements"  
    tags: 
      - AudioObject 
      - ImageObject
      - TextObject
      - VideoObject
      - MediaObjectAssociations

  - name: External Resources
    description: External resources that are linked to the data exchange format.
    tags:
      - Article
      - DDB-Object


  - name: TouristObjects
    description: Tourist destinations are locations that are visited by tourists, e.g. restaurants, hotels, cafes, etc.
    tags:
      - TouristDestination
        

  - name: Personalization
    description: Entities that are used for personalization and user behavior
    tags:
      - CustomerProfile
      - Review
    

servers:
  - url: https://api.uc1-example.com/v1


  
paths:
  /diagram:
    get:
      tags: 
        -  Diagram
      summary: The Data Model schema provides a structured format for data transfer. 
      operationId: getDiagram
      description: |
        The Data Model schema provides a structured format for data transfer. Below is the ERD diagram illustrating the relationships:
        
        ![ERD Diagram](https://raw.githubusercontent.com/HayaHalimeh/DRK-UC1-Datenaustauschformat/main/openapi/ERD_DRK-UC1.png)
        
        Attributes and their descriptions follow below.

  /events:
    get:
      tags:
        - Event
      summary: Provides public information about events
      description: "To exhange all kinds of event data"
      operationId: getEvents
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/Event.yaml
           
        "400":
          description: Invalid status value

  /organizations:
    get:
      tags:
        - Organization
      summary: Provides public information about organizations
      description: "To exchange information about different organizations"
      operationId: getOrganizations
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/Organization.yaml
           
        "400":
          description: Invalid status value
  
  /persons:
    get:
      tags:
        - Person  
      summary: Provides public information about Persons, e.g. artists etc.
      description: "To exchange information about cultural persons"
      operationId: getPersons
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/Person.yaml
        "400":
          description: Invalid status value
  /locations:
    get:
      tags:
        - Location
      summary: Provides public information about locations
      description: "To exchange information about different locations"
      operationId: getLocations
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/Location.yaml
        
        "400":
          description: Invalid status value
  
  /tourist-attractions:
    get: 
      tags:
        - TouristAttraction
      summary: Provides public information about tourist attractions
      description: "To exchnage information about tourist attractions. A tourist attraction is a an event without bounding date and time, e.g. Galleries, Musuems, etc."
      operationId: getTouristAttractions
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/TouristAttraction.yaml
            
        "400":
          description: Invalid status value
      
  /tourist-destinations:
    get:
      tags:
        - TouristDestination
      summary: Provides public information about tourist destinations
      description: "To exchange information about different tourist destinations. Tourist destinations could be restaurants, hotels, Cafes, etc."
      operationId: getTouristDestinations
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/TouristDestination.yaml
              
        "400":
          description: Invalid status value

  /images:
    get:
      tags:
        - ImageObject
      summary: Provides public information about images
      description: "To exchnage all kinds of images as its own object with own defined copyrights and agreements"
      operationId: getImages
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/ImageObject.yaml
             
        "400":
          description: Invalid status value
          

  /videos:
    get:
      tags:
        - VideoObject
      summary: Provides public information about videos
      description: "To exchnage all kinds of videos as its own object with own defined copyrights and agreements"
      operationId: getVideos
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/VideoObject.yaml
      
        "400":
          description: Invalid status value
        
        
  /audios:
    get:
      tags:
        - AudioObject
      summary: Provides public information about audios
      description: "To exchnage all kinds of audios as its own object with own defined copyrights and agreements"
      operationId: getAudios
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/AudioObject.yaml
             
        "400":
          description: Invalid status value
          
  
  /texts:
    get:
      tags:
        - TextObject
      summary: Provides public information about texts
      description: "To exchnage all kinds of texts as its own object with own defined copyrights and agreements"
      operationId: getTexts
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/TextObject.yaml
           
        "400":
          description: Invalid status value

  /media-object-associations:
    get: 
      tags: 
        -  MediaObjectAssociations
      summary: Provides public information about media objects
      description: "To exchange information about media objects. A media object is a digital object, e.g. image, video, audio, etc."
      operationId: getMediaObjectAssociations
      responses: 
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/relationsSchemas/MediaObjectAssociations.yaml
        "400":
          description: Invalid status value

  /articles:
    get:
      tags:
        - Article
      summary: Provides public information about articles
      description: "To exchnage information about articles describing events, tourist attractions, artists and so on"
      operationId: getArticles
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/Article.yaml
            
        "400":
          description: Invalid status value
          
  /creative-works:
    get:
      tags:
        - CreativeWork
      summary: Provides public information about creative works
      description: "To exchnage information about creative works. A creative work is the creative art being introduced, presented, created or replicated in events or theather, etc. "
      operationId: getCreativeWorks
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/CreativeWork.yaml
        
        "400":
          description: Invalid status value
        
  
  /ddb-objects:
    get:
      tags:
        - DDB-Object
      summary: Provides public information about Deutsche Digitale Bibiliothek Objects
      description: "To exchange information about a DDB object linked to an enitity of the data exchnage format"
      operationId: getDDBObjects
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/DDBObject.yaml
            
        "400":
          description: Invalid status value       
        
  #Nutzungsverhalten        
  /accounts:
    get:
      tags:
        - Account
      summary: Provides public information about accounts
      description: "For Personalization"
      operationId: getAccounts
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/Account.yaml
             
        "400":
          description: Invalid status value

  /vendors:
    get:
      tags:
        - VendorProfile
      summary: Provides public information about vendors
      description: "To exchange information about vendor profiles. A vensor profile belongs to an art organization or to a private person (e.g. artist)"
      operationId: getVendors
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/VendorProfile.yaml
             
        "400":
          description: Invalid status value
  
  /customers:
    get:
      tags:
        - CustomerProfile
      summary: Provides public information about customers
      description: "For Personalization"
      operationId: getCustomers
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/CustomerProfile.yaml
              
        "400":
          description: Invalid status value

  /reviews:
    get:
      tags:
        - Review
      summary: Provides public information about reviews
      description: "To exchange information about reviews of customers of culture platforms. Reviews could be about events or tourist attractions"
      operationId: getReviews
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/Review.yaml
     
        "400":
          description: Invalid status value
  
  /event-persons:
    get:
      tags:
        - EventPerson
      summary: Provides public information about persons
      description: "To exchange information about persons. A person could be an artist, a visitor, a vendor, etc."
      operationId: getEventPersons
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/relationsSchemas/EventPerson.yaml
        "400":
          description: Invalid status value
  
openapi: 3.1.0
info:
  version: 1.0.0
  title: Data Transfer Exchange UC1 
  contact:
    name: Contact our support
    email: Ariane@example.com #Ariane
  license:
    name: The MIT License (MIT)
    url: 'https://opensource.org/licenses/MIT'
  
  x-logo:
      url: 'https://raw.githubusercontent.com/HayaHalimeh/DRK-UC1-Datenaustauschformat/main/openapi/logo.png'
      backgroundColor: '#FFFFFF'

  description: 
    "This is an online documentation for the data exchange format of the DRK-UC1 project.
    The schemas build on and extend Schema.org
    New entities or attributes that do not exist in Schema.org are marked as such. Please refer to Schema.org for more details 
    on Data Transfer Exchange UC1. 

    For a detailed visual representation of our Data Model schema, see our [Data Model Diagram](#operation/getDiagram).

    \n\n
    !!Work in progress!! This documentation is still under construction and will be updated regularly."

security:
  - apiKey: [] 
x-tagGroups:
  - name: Diagram
    tags:
      - Diagram
  - name: General
    tags:
      - Event
      - TouristAttraction
      - Organization
      - Location
      - Person
      - CreativeWork

  - name: MediaObjects
    tags:  
      - TextObject
      - ImageObject
      - VideoObject
      - AudioObject

  - name: External Resources  
    tags:  
      - Article
      - DDB-Object

  - name: TouristObjects
    tags:  
      - TouristDestination  

  - name: Nutzungsverhalten
    tags:     
      - Account
      - VendorProfile
      - CustomerProfile
      - Review
 
servers:
  - url: https://api.uc1-example.com/v1


  
paths:
  /diagram:
    get:
      tags: 
        -  Diagram
      summary: The Data Model schema provides a structured format for data transfer. 
      operationId: getDiagram
      description: |
        The Data Model schema provides a structured format for data transfer. Below is the ERD diagram illustrating the relationships:
        
        ![ERD Diagram](https://raw.githubusercontent.com/HayaHalimeh/DRK-UC1-Datenaustauschformat/main/openapi/ERD_DRK-UC1.png)
        
        Attributes and their descriptions follow below.

  /events:
    get:
      tags:
        - Event
      summary: Provides public information about events
      description: "To exhange all kinds of event data"
      operationId: getEvents
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/Event.yaml
              #example:
              #  $ref: "./components/examples/Account.json"
        "400":
          description: Invalid status value

  /organizations:
    get:
      tags:
        - Organization
      summary: Provides public information about organizations
      description: "To exchange information about different organizations"
      operationId: getOrganizations
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/Organization.yaml
              #example:
              #  $ref: "./components/examples/Account.json"
        "400":
          description: Invalid status value
  
  /locations:
    get:
      tags:
        - Location
      summary: Provides public information about locations
      description: "To exchange information about different locations"
      operationId: getLocations
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/Location.yaml
              #example:
              #  $ref: "./components/examples/Account.json"
        "400":
          description: Invalid status value
  
  /tourist-attractions:
    get: 
      tags:
        - TouristAttraction
      summary: Provides public information about tourist attractions
      description: "To exchnage information about tourist attractions. A tourist attraction is a an event without bounding date and time, e.g. Galleries, Musuems, etc."
      operationId: getTouristAttractions
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/TouristAttraction.yaml
              #example:
              #  $ref: "./components/examples/Account.json"
        "400":
          description: Invalid status value
      
  /tourist-destinations:
    get:
      tags:
        - TouristDestination
      summary: Provides public information about tourist destinations
      description: "To exchange information about different tourist destinations. Tourist destinations could be restaurants, hotels, Cafes, etc."
      operationId: getTouristDestinations
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/TouristDestination.yaml
              #example:
              #  $ref: "./components/examples/Account.json"
        "400":
          description: Invalid status value

  /images:
    get:
      tags:
        - ImageObject
      summary: Provides public information about images
      description: "To exchnage all kinds of images as its own object with own defined copyrights and agreements"
      operationId: getImages
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/ImageObject.yaml
              #example:
              #  $ref: "./components/examples/Account.json"
        "400":
          description: Invalid status value
          

  /videos:
    get:
      tags:
        - VideoObject
      summary: Provides public information about videos
      description: "To exchnage all kinds of videos as its own object with own defined copyrights and agreements"
      operationId: getVideos
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/VideoObject.yaml
              #example:
              #  $ref: "./components/examples/Account.json"
        "400":
          description: Invalid status value
        
        
  /audios:
    get:
      tags:
        - AudioObject
      summary: Provides public information about audios
      description: "To exchnage all kinds of audios as its own object with own defined copyrights and agreements"
      operationId: getAudios
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/AudioObject.yaml
              #example:
              #  $ref: "./components/examples/Account.json"
        "400":
          description: Invalid status value
          
  
  /texts:
    get:
      tags:
        - TextObject
      summary: Provides public information about texts
      description: "To exchnage all kinds of texts as its own object with own defined copyrights and agreements"
      operationId: getTexts
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/TextObject.yaml
              #example:
              #  $ref: "./components/examples/Account.json"
        "400":
          description: Invalid status value

  /articles:
    get:
      tags:
        - Article
      summary: Provides public information about articles
      description: "To exchnage information about articles describing events, tourist attractions, artists and so on"
      operationId: getArticles
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/Article.yaml
              #example:
              #  $ref: "./components/examples/Account.json"
        "400":
          description: Invalid status value
          
  /creative-works:
    get:
      tags:
        - CreativeWork
      summary: Provides public information about creative works
      description: "To exchnage information about creative works. A creative work is the creative art being introduced, presented, created or replicated in events or theather, etc. \\"
      operationId: getCreativeWorks
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/CreativeWork.yaml
              #example:
              #  $ref: "./components/examples/Account.json"
        "400":
          description: Invalid status value
        
  
  /ddb-objects:
    get:
      tags:
        - DDB-Object
      summary: Provides public information about Deutsche Digitale Bibiliothek Objects
      description: "To exchange information about a DDB object linked to an enitity of the data exchnage format"
      operationId: getDDBObjects
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/DDBObject.yaml
              #example:
              #  $ref: "./components/examples/Account.json"
        "400":
          description: Invalid status value       
        
  #Nutzungsverhalten        
  /accounts:
    get:
      tags:
        - Account
      summary: Provides public information about accounts
      description: "For Personalization"
      operationId: getAccounts
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "./components/schemas/Account.yaml"
              #example:
              #  $ref: "./components/examples/Account.json"
        "400":
          description: Invalid status value

  /vendors:
    get:
      tags:
        - VendorProfile
      summary: Provides public information about vendors
      description: "To exchange information about vendor profiles. A vensor profile belongs to an art organization or to a private person (e.g. artist)"
      operationId: getVendors
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/VendorProfile.yaml
              #example:
              #  $ref: "./components/examples/Account.json"
        "400":
          description: Invalid status value
  
  /customers:
    get:
      tags:
        - CustomerProfile
      summary: Provides public information about customers
      description: "For Personalization"
      operationId: getCustomers
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/ExampleObject.yaml
              #example:
              #  $ref: "./components/examples/Account.json"
        "400":
          description: Invalid status value

  /reviews:
    get:
      tags:
        - Review
      summary: Provides public information about reviews
      description: "To exchange information about reviews of customers of culture platforms. Reviews could be about events or tourist attractions"
      operationId: getReviews
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: components/schemas/Review.yaml
              #example:
              #  $ref: "./components/examples/Account.json"
        "400":
          description: Invalid status value





    
   